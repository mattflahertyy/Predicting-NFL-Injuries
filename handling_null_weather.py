# -*- coding: utf-8 -*-
"""handling_null_weather.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E3ubASFuOlNQpiZ6wnhLiaVKIohE5Usm
"""

import pandas as pd

from google.colab import files
uploaded=files.upload()

weather= pd.read_csv('weather_data.csv')

print(weather)

#delete all entries beyong 2023 week 10, as we do not need them
# Filter the DataFrame to keep entries up to year 2023, week 10
filtered_df = weather.loc[(weather['Season'] < 2023) | ((weather['Season'] == 2023) & (weather['Week'] <= 10))]

# Update the original DataFrame with the filtered data
weather = filtered_df.copy()

# Display the updated DataFrame if needed
print(weather)

# Loop through all columns and check for null values
for column in weather.columns:
    null_count = weather[column].isnull().sum()
    print(f"Column '{column}' has {null_count} null values.")

# Find and return rows where 'Weather' column has null values
null_weather_rows = weather[weather['Weather'].isnull()]

# Display the rows with null values in the 'Weather' column
print(null_weather_rows)

# Replace null values in the 'Weather' column with 'Na'
weather['Weather'].fillna('Na', inplace=True)

"""**UPDATING WEATHER COLUMN**"""

# Find and return all unique values in the 'Weather' column
unique_weather_values = weather['Weather'].unique()

# Display the unique weather values
print(unique_weather_values)

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""Since there are not many values, i can find the weather for these days

 season 2012 week 3 falcons vs chargers -->
 * GAME PLAYED ON :sept 23 2012,
 * GAME PLAYED IN: san diego HOME
 * STADIUM: sdccu stadium
 * OUTDOOR/INDOOR: outdoor


https://www.espn.com/nfl/game/_/gameId/320923024

https://www.timeanddate.com/weather/usa/san-diego/historic?month=9&year=2012

* WEATHER -- PARTLY CLOUDY

"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2012) & (weather['Week'] == 3) & (weather['Team1'] == 'Falcons') & (weather['Team2'] == 'Chargers'), 'Weather'] = 'Partly Cloudy'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2012 week 11 bears vs 49ers

* GAME PLAYED ON:November 19 2012
* GAME PLAYED IN: san francisco
* ARENA: Candle stick park
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/321119025
https://www.timeanddate.com/weather/usa/san-francisco/historic?month=11&year=2012

* WEATHER: PARTLY CLOUDY


"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2012) & (weather['Week'] == 11) & (weather['Team1'] == 'Bears') & (weather['Team2'] == '49ers'), 'Weather'] = 'Partly Cloudy'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2012 week 15 panthers vs chargers

* GAME PLAYED ON:December 16 2012
* GAME PLAYED IN: san diego
* ARENA: SDCCU
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/321216024
https://www.timeanddate.com/weather/usa/san-diego/historic?month=12&year=2012


* WEATHER: PARTLY CLOUDY


"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2012) & (weather['Week'] == 15) & (weather['Team1'] == 'Panthers') & (weather['Team2'] == 'Chargers'), 'Weather'] = 'Partly Cloudy'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2012 week 15 Seahawks vs Bills

* GAME PLAYED ON:December 16 2012
* GAME PLAYED IN: toronto
* ARENA: rogers center
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/321216024
https://www.timeanddate.com/weather/usa/san-diego/historic?month=12&year=2012


* WEATHER: RAINING

"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2012) & (weather['Week'] == 15) & (weather['Team1'] == 'Seahawks') & (weather['Team2'] == 'Bills'), 'Weather'] = 'Raining'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2012 week 17 raiders vs chargers

* GAME PLAYED ON:Jan 1 2012
* GAME PLAYED IN: Oakland
* ARENA: Oakland Coliseum
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/320101013
https://www.timeanddate.com/weather/usa/oakland/historic?month=1&year=2012


* WEATHER: PARTLY CLOUDY

"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2012) & (weather['Week'] == 17) & (weather['Team1'] == 'Raiders') & (weather['Team2'] == 'Chargers'), 'Weather'] = 'Partly Cloudy'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2012 week 17 Cardinals vs 49ers

* GAME PLAYED ON: 8:30 PM, October 29, 2012
* GAME PLAYED IN: glendale arizona
* ARENA: State farm stadium RETRACTABLE ROOF
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/321216024
https://www.timeanddate.com/weather/usa/san-diego/historic?month=12&year=2012


* WEATHER: SUNNY

"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2012) & (weather['Week'] == 17) & (weather['Team1'] == 'Cardinals') & (weather['Team2'] == '49ers'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2013 week 1 Packers vs 49ers

* GAME PLAYED ON:Sept 8 2013
* GAME PLAYED IN: san francisco
* ARENA: candlestick  park
* OUTDOOR/INDOOR : OUTDOOR
https://www.espn.com/nfl/game/_/gameId/330908025


https://www.timeanddate.com/weather/usa/san-francisco/historic?month=9&year=2013
* WEATHER: Sunny

"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2013) & (weather['Week'] == 1) & (weather['Team1'] == 'Packers') & (weather['Team2'] == '49ers'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2013 week 1 Texans vs Chargers

* GAME PLAYED ON:Sept 9 2013
* GAME PLAYED IN: san diego
* ARENA: sdccu
* OUTDOOR/INDOOR : OUTDOOR
https://www.espn.com/nfl/game/_/gameId/330909024

https://www.timeanddate.com/weather/usa/san-francisco/historic?month=9&year=2013
* WEATHER: Sunny

"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2013) & (weather['Week'] == 1) & (weather['Team1'] == 'Texans') & (weather['Team2'] == 'Chargers'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2013 week 3 colts vs 49ers

* GAME PLAYED ON: September 22, 2013
* GAME PLAYED IN: san francisco
* ARENA: candlestick aprk
* OUTDOOR/INDOOR : OUTDOOR


https://www.espn.com/nfl/game/_/gameId/330922025
https://www.timeanddate.com/weather/usa/san-francisco/historic?month=9&year=2013


* WEATHER: SUNNY

"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2013) & (weather['Week'] == 3) & (weather['Team1'] == 'Colts') & (weather['Team2'] == '49ers'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2013 week 4 cowboys chargers

* GAME PLAYED ON: sept 29 2013
* GAME PLAYED IN: san diego
* ARENA: SDCCU
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/330929024
https://www.timeanddate.com/weather/usa/san-diego/historic?month=12&year=2012


* WEATHER: SUNNY

"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2013) & (weather['Week'] == 4) & (weather['Team1'] == 'Cowboys') & (weather['Team2'] == 'Chargers'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2013 week 6 Colts chargers

* GAME PLAYED ON: oct 14 2013
* GAME PLAYED IN: san diego
* ARENA: SDCCU
* OUTDOOR/INDOOR : OUTDOOR
https://www.espn.com/nfl/game/_/gameId/330929024
https://www.timeanddate.com/weather/usa/san-diego/historic?month=12&year=2012


* WEATHER: SUNNY

"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2013) & (weather['Week'] == 6) & (weather['Team1'] == 'Colts') & (weather['Team2'] == 'Chargers'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2013 week 10 Panthers 49ers

* GAME PLAYED ON: nov 10 2013
* GAME PLAYED IN: san francisco
* ARENA: candlestick park
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/331110025

https://www.timeanddate.com/weather/usa/san-francisco/historic?month=11&year=2013
* WEATHER: SUNNY
"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2013) & (weather['Week'] == 10) & (weather['Team1'] == 'Panthers') & (weather['Team2'] == '49ers'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2013 week 10 Broncos chargers

* GAME PLAYED ON: nov 10 2013
* GAME PLAYED IN: san diego
* ARENA: sdccu
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/331110025

https://www.timeanddate.com/weather/usa/san-francisco/historic?month=11&year=2013
WEATHER: SUNNY
"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2013) & (weather['Week'] == 10) & (weather['Team1'] == 'Broncos') & (weather['Team2'] == 'Chargers'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2014 week 4 Jaguars chargers

* GAME PLAYED ON: sept 28 2014
* GAME PLAYED IN: san diego
* ARENA: sdccu
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/400554290

https://www.timeanddate.com/weather/usa/san-diego/historic?month=9&year=2014

WEATHER: PARTLY CLOUDY
"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2014) & (weather['Week'] == 4) & (weather['Team1'] == 'Jaguars') & (weather['Team2'] == 'Chargers'), 'Weather'] = 'Partly Cloudy'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2014 week 5 Jets chargers

* GAME PLAYED ON: oct 5 2014
* GAME PLAYED IN: san diego
* ARENA: sdccu
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/400554275

https://www.timeanddate.com/weather/usa/san-diego/historic?month=9&year=2014

WEATHER: SUNNY
"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2014) & (weather['Week'] == 5) & (weather['Team1'] == 'Jets') & (weather['Team2'] == 'Chargers'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2014 week 7 Chiefs chargers

* GAME PLAYED ON: December 28, 2014
* GAME PLAYED IN: kansas city MO
* ARENA: geha field at arrowhead stadium
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/400554413

https://www.timeanddate.com/weather/usa/kansas-city-kansas/historic?month=12&year=2014

WEATHER: SUNNY
"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2014) & (weather['Week'] == 7) & (weather['Team1'] == 'Chiefs') & (weather['Team2'] == 'Chargers'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2014 week 11 Raiders chargers

* GAME PLAYED ON: November 16, 2014
* GAME PLAYED IN: san diego
* ARENA: sdccu
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/400554391

https://www.timeanddate.com/weather/usa/san-diego/historic?month=9&year=2014

WEATHER: SUNNY
"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2014) & (weather['Week'] == 11) & (weather['Team1'] == 'Raiders') & (weather['Team2'] == 'Chargers'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2014 week 12 Rams chargers

* GAME PLAYED ON: November 23, 2014
* GAME PLAYED IN: san diego
* ARENA: sdccu
* OUTDOOR/INDOOR : OUTDOOR
https://www.espn.com/nfl/game/_/gameId/400554360

https://www.timeanddate.com/weather/usa/san-diego/historic?month=9&year=2014

WEATHER: SUNNY
"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2014) & (weather['Week'] == 12) & (weather['Team1'] == 'Rams') & (weather['Team2'] == 'Chargers'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""2023 week 4 Falcons Jaguars

* GAME PLAYED ON: oct 1, 2023
* GAME PLAYED IN: london
* ARENA: wembley stadium
* OUTDOOR/INDOOR : OUTDOOR

https://www.espn.com/nfl/game/_/gameId/400554391

https://www.timeanddate.com/weather/usa/san-diego/historic?month=9&year=2014

WEATHER: SUNNY
"""

# Replace 'Na' with 'partly cloudy' for the specified entity
weather.loc[(weather['Season'] == 2023) & (weather['Week'] == 4) & (weather['Team1'] == 'Falcons') & (weather['Team2'] == 'Jaguars'), 'Weather'] = 'Sunny'

# Find and return all rows where 'Wather' column has the value 'na'
na_weather_rows = weather[weather['Weather'] == 'Na']

# Display the rows with 'Weather' value equal to 'na'
print(na_weather_rows)

"""

---

"""

weather.to_csv('updated_weatherr.csv', index=False)

from google.colab import files
uploaded=files.upload()

nfl_teams= pd.read_csv('nfl_teams.csv')
print(nfl_teams)